apiVersion: batch/v1
kind: Job
metadata:
  name: idp-dbmigrate
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: idp-dbmigrate
        image: gsatspencer/identity-idp
        command: ['/bin/sh']
        args: ['-c' '/usr/local/bin/bundle exec rake db:create ; /usr/local/bin/bundle exec rake db:environment:set ; /usr/local/bin/bundle exec rake db:reset /usr/local/bin/bundle exec rake db:environment:set ; /usr/local/bin/bundle exec rake dev:prime ; /usr/local/bin/bundle exec rake parallel:setup ; /usr/local/bin/bundle exec rake db:migrate']
        env:
        - name: RAILS_ENV
          value: "production"
        - name: NEW_RELIC_AGENT_ENABLED
          value: "false"
        - name: database_host
          valueFrom:
            configMapKeyRef:
              name: idp-postgres
              key: hostname
        - name: MIGRATION_STATEMENT_TIMEOUT
          value: "600000"
        - name: SAFETY_ASSURED
          value: "1"
        volumeMounts:
        - name: appconfig
          mountPath: "/appconfig"
          readOnly: true
        - name: certs
          mountPath: "/upaya/certs"
          readOnly: true
        - name: keys
          mountPath: "/upaya/keys"
          readOnly: true
        lifecycle:
          postStart:
            exec:
              command:
                - /bin/sh
                - -c
                - |
                  /bin/bash <<'EOF'
                  # This copies in all of the secrets/config since k8s can't mount files like docker does
                  # Ideally, config would be passed in as env vars, but that seems like a PITA to translate over.
                  cp /appconfig/application.yml /upaya/config/
                  cp /appconfig/agencies.yml /upaya/config/
                  cp /appconfig/service_providers.yml /upaya/config/
                  cp /appconfig/pwned_passwords.txt /upaya/pwned_passwords/
                  EOF
      volumes:
      - name: appconfig
        secret:
          secretName: appconfig
      - name: certs
        secret:
          secretName: certs
      - name: keys
        secret:
          secretName: keys
